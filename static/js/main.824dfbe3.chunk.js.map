{"version":3,"sources":["components/Landing.js","components/WorkItem.js","components/Work.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["Landing","react_default","a","createElement","className","Component","WorkItem","this","props","projects","map","project","key","id","src","image","alt","name","href","source","rel","target","livesite","Work","state","document","title","components_WorkItem","Menu","onClick","toggleMenu","onTouchStart","react_router_dom","to","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hamClick","e","preventDefault","reversed","play","reverse","lineOne","lineTwo","menuPage","TimelineLite","paused","rotation","transformOrigin","y","autoAlpha","_this2","xmlns","viewBox","ref","line","x1","y1","x2","y2","fill","stroke","strokeWidth","react_router","exact","path","component","div","components_Menu","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.824dfbe3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Landing extends Component {\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"homepage\">\r\n               <header>\r\n                  <div className=\"headertext\">\r\n                     <h1>Hey There.</h1>\r\n                     <p>My name is Michael Kipchumba, a designer and developer from Nairobi, Kenya. I love crafting interface designs and translating them into working applications. I work with HTML, CSS/SASS, Javascript (React and Angular) and Python (Django).</p>\r\n                  </div>\r\n               </header>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default Landing;","import React, { Component } from 'react'\r\n\r\nclass WorkItem extends Component {\r\n   render() {\r\n      return this.props.projects.map(project => (\r\n         <div key={project.id} className=\"pane\">\r\n            <div className=\"projectcard\">\r\n               <div className=\"projectimage\">\r\n                  <img src={project.image} alt=\"\"/>\r\n               </div>\r\n               <div className=\"projectdesc\">\r\n                  <h4>{ project.name }</h4>\r\n                  <div className=\"projectlinks\">\r\n                     <a href={project.source} rel=\"noopener noreferrer\" target=\"_blank\">View Source</a>\r\n                     <a href={project.livesite} rel=\"noopener noreferrer\" target=\"_blank\" >Live Site</a>\r\n                  </div>\r\n                  \r\n               </div>\r\n            </div>\r\n         </div>\r\n      ));\r\n   }\r\n}\r\n\r\nexport default WorkItem;\r\n","import React, { Component } from 'react'\r\nimport WorkItem from './WorkItem';\r\n\r\nclass Work extends Component {\r\n  state = {\r\n    projects: [\r\n      {\r\n        id: 1,\r\n        name: \"Pig Dice\",\r\n        source: \"https://github.com/mikechumba/pigdice\",\r\n        livesite: \"https://mikechumba.github.io/pigdice\",\r\n        image: \"https://ik.imagekit.io/bsvzrpqaj/piddice_rkz5kwHaV.png\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Instagram\",\r\n        source: \"https://github.com/mikechumba/insta\",\r\n        livesite: \"https://shashin-o-mimasu.herokuapp.com\",\r\n        image: \"https://ik.imagekit.io/bsvzrpqaj/Instagram_BJsmqPSaN.png\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    document.title = \"Work\"\r\n    return (\r\n      <div>\r\n         <div className=\"workpage\">\r\n            <div className=\"container\">\r\n              <h1>Work</h1>\r\n              <div className=\"projects\">\r\n                <WorkItem projects={this.state.projects} />\r\n              </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Menu extends Component {\r\n\r\n  // menuClick = e => {\r\n  //   e.preventDefault();\r\n  //   return this.props.toggleMenu;\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"menupage\">\r\n\r\n          <div className=\"guides\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span className=\"desktop\"></span>\r\n          </div>\r\n\r\n          <div className=\"menubg\"></div>\r\n\r\n          <div className=\"contentpanel container\">\r\n\r\n              <div className=\"contact\">\r\n                <h1>Want to work with me?</h1>\r\n                <div className=\"socials\">\r\n                    <p><a href=\"https://mailto:michaelchumba@outlook.com\" rel=\"noopener noreferrer\" target=\"_blank\">Email</a></p>\r\n                    <p><a href=\"https://linkedin.com/in/itsmikechumba\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a></p>\r\n                    <p><a href=\"https://github.com/mikechumba\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a></p>\r\n                    <p><a href=\"https://behance.net/michaelkipchumba\" rel=\"noopener noreferrer\" target=\"_blank\">Behance</a></p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"menucontent\">\r\n                <p onClick={this.props.toggleMenu} onTouchStart={this.props.toggleMenu}><Link to='/'>Home</Link></p>\r\n                <p onClick={this.props.toggleMenu} onTouchStart={this.props.toggleMenu}><Link to='/work'>Work</Link></p>\r\n                <p><a href='https://ik.imagekit.io/bsvzrpqaj/Michael_Kipchumba_Resume_2021_Aug_OuBH-780hl6.pdf' rel=\"noopener noreferrer\" target=\"_blank\">Resume</a></p>\r\n              </div>\r\n\r\n           </div>\r\n               \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { TimelineLite } from 'gsap';\r\nimport './App.css';\r\nimport Landing from './components/Landing';\r\nimport Work from './components/Work';\r\nimport Menu from './components/Menu';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.lineOne = null;\r\n\r\n    this.lineTwo = null;\r\n\r\n    this.menuPage = null;\r\n\r\n    this.toggleMenu = new TimelineLite({paused: true, reversed: true});\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleMenu\r\n      .to(this.lineOne, .125, {rotation: 45, transformOrigin: \"50% 50%\", y: 23}, .125)\r\n      .to(this.lineTwo, .125, {rotation: -45, transformOrigin: \"50% 50%\", y: -23}, .125)\r\n      .to(this.menuPage, .125, {autoAlpha: 1}, 0.05);\r\n  }\r\n\r\n  hamClick = e => {\r\n    e.preventDefault();\r\n    this.toggleMenu.reversed() ? this.toggleMenu.play() : this.toggleMenu.reverse();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          {/* <Landing /> */}\r\n          <div className=\"menu-icon\">\r\n            <svg onClick={this.hamClick} className=\"ham\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\r\n              <line ref={ line => this.lineOne = line } x1=\"25\" y1=\"40\" x2=\"110\" y2=\"40\" fill=\"none\" stroke=\"#B9B9B9\" strokeWidth=\"6\"/>\r\n              <line ref={ line => this.lineTwo = line} x1=\"25\" y1=\"86\" x2=\"110\" y2=\"86\" fill=\"none\" stroke=\"#B9B9B9\" strokeWidth=\"6\"/>\r\n            </svg>\r\n\r\n          </div>\r\n          <div className=\"guides\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span className=\"desktop\"></span>\r\n          </div>\r\n          <Route exact path='/' component={Landing} />\r\n          <Route path='/work' component={Work} />\r\n          <div ref={ div => this.menuPage = div} className=\"forToggle\">\r\n            <Menu toggleMenu={this.hamClick} />  \r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}